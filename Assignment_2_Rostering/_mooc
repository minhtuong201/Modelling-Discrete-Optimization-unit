{
    "assignmentKey": "c2QGQWR1FM",
    "history": {
        "files": {
            "models/nroster.mzn": {
                "changes": [
                    {
                        "edits": [
                            {
                                "line": 78,
                                "text": "% Action (headings) = MORN, DAY, EVEN, NIGH, OFF",
                                "type": "insertion"
                            },
                            {
                                "line": 78,
                                "text": "% State (columns) = START, MORN, DAY1, DAY2, EVEN, NIGH1, NIGH2, NIGH3, OFF1, OFF2",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1712234899.222
                    },
                    {
                        "edits": [
                            {
                                "line": 38,
                                "text": "% --- Stage A",
                                "type": "deletion"
                            },
                            {
                                "line": 39,
                                "text": "% A1",
                                "type": "deletion"
                            },
                            {
                                "line": 40,
                                "text": "include \"globals.mzn\";",
                                "type": "deletion"
                            },
                            {
                                "line": 41,
                                "text": "constraint forall(nurse in NURSE, i in DAYS) (",
                                "type": "deletion"
                            },
                            {
                                "line": 42,
                                "text": "\t\t\t\t\t\t\t\t rostered_off[nurse, i] = true -> sh[nurse, i] = OFF",
                                "type": "deletion"
                            },
                            {
                                "line": 43,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 44,
                                "text": "\t\t\t\t\t\t\t\t",
                                "type": "deletion"
                            },
                            {
                                "line": 45,
                                "text": "% A2",
                                "type": "deletion"
                            },
                            {
                                "line": 46,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 47,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-3) (",
                                "type": "deletion"
                            },
                            {
                                "line": 48,
                                "text": "% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse,i] = sh[nurse, i+1] \t/\\ sh[nurse, i] = NIGH /\\ sh[nurse,i] = sh[nurse, i+2]) -> \tsh[nurse, i+3] != NIGH",
                                "type": "deletion"
                            },
                            {
                                "line": 49,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 50,
                                "text": "% );",
                                "type": "deletion"
                            },
                            {
                                "line": 51,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 52,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 53,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-1) (",
                                "type": "deletion"
                            },
                            {
                                "line": 54,
                                "text": "% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = NIGH -> sh[nurse, i+1] in {EVEN, NIGH, OFF})",
                                "type": "deletion"
                            },
                            {
                                "line": 55,
                                "text": "% \t\t\t\t\t\t\t\t\t /\\ (sh[nurse, i] = EVEN -> sh[nurse, i+1] != MORN)",
                                "type": "deletion"
                            },
                            {
                                "line": 56,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 57,
                                "text": "% );",
                                "type": "deletion"
                            },
                            {
                                "line": 58,
                                "text": "\t\t\t\t\t",
                                "type": "deletion"
                            },
                            {
                                "line": 59,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 60,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-2) (",
                                "type": "deletion"
                            },
                            {
                                "line": 61,
                                "text": "% \t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = OFF /\\ sh[nurse, i+1] = OFF) ->  sh[nurse, i+2] != OFF",
                                "type": "deletion"
                            },
                            {
                                "line": 62,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 63,
                                "text": "% );",
                                "type": "deletion"
                            },
                            {
                                "line": 64,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 65,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 66,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 2..nday-1) ",
                                "type": "deletion"
                            },
                            {
                                "line": 67,
                                "text": "% \t\t\t\t\t\t\t\t((sh[nurse, i] = DAY /\\ sh[nurse, i-1] != DAY) -> sh[nurse, i + 1] = DAY) /\\",
                                "type": "deletion"
                            },
                            {
                                "line": 68,
                                "text": "% \t\t\t\t\t\t\t\t(sh[nurse, 1] = DAY -> sh[nurse, 2] = DAY)",
                                "type": "deletion"
                            },
                            {
                                "line": 69,
                                "text": "% );",
                                "type": "deletion"
                            },
                            {
                                "line": 70,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% Using regular constraint:",
                                "type": "deletion"
                            },
                            {
                                "line": 72,
                                "text": "array[NURSE, DAYS] of var SHIFT: tshift; % transition shift",
                                "type": "deletion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "\t\t\t\t\t\t\t\tregular([sh[nurse, i] | i in DAYS], 10, 5, transition, 1, 2..10)",
                                "type": "deletion"
                            },
                            {
                                "line": 75,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 76,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "array[1..10, SHIFT] of 0..10: transition = ",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "% Action (headings) = MORN, DAY, EVEN, NIGH, OFF",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "% State (columns) = START, MORN, DAY1, DAY2, EVEN, NIGH1, NIGH2, NIGH3, OFF1, OFF2",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "[|2,3,5,6,9",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "|2,3,5,6,9",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "|0,4,0,0,0",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "|2,4,5,6,9",
                                "type": "deletion"
                            },
                            {
                                "line": 84,
                                "text": "|0,3,5,6,9",
                                "type": "deletion"
                            },
                            {
                                "line": 85,
                                "text": "|0,0,5,7,9",
                                "type": "deletion"
                            },
                            {
                                "line": 86,
                                "text": "|0,0,5,8,9",
                                "type": "deletion"
                            },
                            {
                                "line": 87,
                                "text": "|0,0,5,0,9",
                                "type": "deletion"
                            },
                            {
                                "line": 88,
                                "text": "|2,3,5,6,10",
                                "type": "deletion"
                            },
                            {
                                "line": 89,
                                "text": "|2,3,5,6,0",
                                "type": "deletion"
                            },
                            {
                                "line": 90,
                                "text": "|];",
                                "type": "deletion"
                            },
                            {
                                "line": 91,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 92,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 94,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 95,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 96,
                                "text": "% -- Stage B",
                                "type": "deletion"
                            },
                            {
                                "line": 97,
                                "text": "% Max and Min work shifts constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 98,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 99,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-6) (sum(j in i..i+6)(sh[nurse, j] != OFF) <= maxweek ) /\\",
                                "type": "deletion"
                            },
                            {
                                "line": 100,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-13) (sum(j in i..i+13)(sh[nurse, j] = NIGH) <= maxnightfort ) /\\",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-13) (sum(j in i..i+13)(sh[nurse, j] != OFF) >= minfort )  ",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 103,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "array[DAYS, SHIFT] of var 0..infinity: cnt; % Counting number of nurse per explicit shift and day",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall(d in DAYS) (global_cardinality(sh[..,d], SHIFT, cnt[d,..]));",
                                "type": "deletion"
                            },
                            {
                                "line": 106,
                                "text": "constraint forall(d in DAYS) (",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "\t\t\t\t\t\t\t\tforall(shift in SHIFT) (",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "\t\t\t\t\t\t\t\t\t\t\tcnt[d, shift] >= minshift[shift, d]",
                                "type": "deletion"
                            },
                            {
                                "line": 109,
                                "text": "\t\t\t\t\t\t\t\t)",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "\t\t\t\t\t\t\t",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 112,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 113,
                                "text": "constraint forall(nurse in NURSE, d in DAYS) (wd[nurse, d] = dummy);",
                                "type": "deletion"
                            },
                            {
                                "line": 114,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 115,
                                "text": "% -- Stage C",
                                "type": "deletion"
                            },
                            {
                                "line": 116,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 117,
                                "text": "constraint total_cost = sum(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 118,
                                "text": "\t\t\t\t\t\t(sum(day in DAYS) (sh[nurse, day] != OFF)) * shift_cost[nurse]",
                                "type": "deletion"
                            },
                            {
                                "line": 119,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 120,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 121,
                                "text": "solve minimize total_cost;",
                                "type": "deletion"
                            },
                            {
                                "line": 122,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 123,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 124,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 125,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 126,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 127,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 128,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 129,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 130,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 131,
                                "text": "",
                                "type": "deletion"
                            }
                        ],
                        "timestamp": 1712267715.083
                    },
                    {
                        "edits": [
                            {
                                "line": 38,
                                "text": "% --- Stage A",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "% A1",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "include \"globals.mzn\";",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "constraint forall(nurse in NURSE, i in DAYS) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t rostered_off[nurse, i] = true -> sh[nurse, i] = OFF",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "% A2",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-3) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t\t\t\t(sh[nurse,i] = sh[nurse, i+1] \t/\\ sh[nurse, i] = NIGH /\\ sh[nurse,i] = sh[nurse, i+2]) -> \tsh[nurse, i+3] != NIGH",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-1) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = NIGH -> sh[nurse, i+1] in {EVEN, NIGH, OFF})",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t\t /\\ (sh[nurse, i] = EVEN -> sh[nurse, i+1] != MORN)",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-2) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = OFF /\\ sh[nurse, i+1] = OFF) ->  sh[nurse, i+2] != OFF",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 2..nday-1) ",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t((sh[nurse, i] = DAY /\\ sh[nurse, i-1] != DAY) -> sh[nurse, i + 1] = DAY) /\\",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "\t\t\t\t\t\t\t\t(sh[nurse, 1] = DAY -> sh[nurse, 2] = DAY)",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 38,
                                "text": "",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1712267770.285
                    },
                    {
                        "edits": [
                            {
                                "line": 46,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 47,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-3) (",
                                "type": "deletion"
                            },
                            {
                                "line": 48,
                                "text": "\t\t\t\t\t\t\t\t\t\t\t(sh[nurse,i] = sh[nurse, i+1] \t/\\ sh[nurse, i] = NIGH /\\ sh[nurse,i] = sh[nurse, i+2]) -> \tsh[nurse, i+3] != NIGH",
                                "type": "deletion"
                            },
                            {
                                "line": 49,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 50,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 51,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 51,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-3) (",
                                "type": "insertion"
                            },
                            {
                                "line": 51,
                                "text": "% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse,i] = sh[nurse, i+1] \t/\\ sh[nurse, i] = NIGH /\\ sh[nurse,i] = sh[nurse, i+2]) -> \tsh[nurse, i+3] != NIGH",
                                "type": "insertion"
                            },
                            {
                                "line": 51,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 51,
                                "text": "% );",
                                "type": "insertion"
                            },
                            {
                                "line": 52,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 53,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-1) (",
                                "type": "deletion"
                            },
                            {
                                "line": 54,
                                "text": "\t\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = NIGH -> sh[nurse, i+1] in {EVEN, NIGH, OFF})",
                                "type": "deletion"
                            },
                            {
                                "line": 55,
                                "text": "\t\t\t\t\t\t\t\t\t /\\ (sh[nurse, i] = EVEN -> sh[nurse, i+1] != MORN)",
                                "type": "deletion"
                            },
                            {
                                "line": 56,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 57,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 58,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 58,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-1) (",
                                "type": "insertion"
                            },
                            {
                                "line": 58,
                                "text": "% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = NIGH -> sh[nurse, i+1] in {EVEN, NIGH, OFF})",
                                "type": "insertion"
                            },
                            {
                                "line": 58,
                                "text": "% \t\t\t\t\t\t\t\t\t /\\ (sh[nurse, i] = EVEN -> sh[nurse, i+1] != MORN)",
                                "type": "insertion"
                            },
                            {
                                "line": 58,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 58,
                                "text": "% );",
                                "type": "insertion"
                            },
                            {
                                "line": 59,
                                "text": "constraint forall(nurse in NURSE) (",
                                "type": "deletion"
                            },
                            {
                                "line": 60,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 1..nday-2) (",
                                "type": "deletion"
                            },
                            {
                                "line": 61,
                                "text": "\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = OFF /\\ sh[nurse, i+1] = OFF) ->  sh[nurse, i+2] != OFF",
                                "type": "deletion"
                            },
                            {
                                "line": 62,
                                "text": "\t\t\t\t\t\t\t\t)\t",
                                "type": "deletion"
                            },
                            {
                                "line": 63,
                                "text": ");",
                                "type": "deletion"
                            },
                            {
                                "line": 64,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 64,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 1..nday-2) (",
                                "type": "insertion"
                            },
                            {
                                "line": 64,
                                "text": "% \t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = OFF /\\ sh[nurse, i+1] = OFF) ->  sh[nurse, i+2] != OFF",
                                "type": "insertion"
                            },
                            {
                                "line": 64,
                                "text": "% \t\t\t\t\t\t\t\t)\t",
                                "type": "insertion"
                            },
                            {
                                "line": 64,
                                "text": "% );",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% constraint forall(nurse in NURSE) (",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% \t\t\t\t\t\t\t\tforall(i in 2..nday-1) ",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% \t\t\t\t\t\t\t\t((sh[nurse, i] = DAY /\\ sh[nurse, i-1] != DAY) -> sh[nurse, i + 1] = DAY) /\\",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% \t\t\t\t\t\t\t\t(sh[nurse, 1] = DAY -> sh[nurse, 2] = DAY)",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% );",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "% Using regular constraint:",
                                "type": "insertion"
                            },
                            {
                                "line": 65,
                                "text": "array[NURSE, DAYS] of var SHIFT: tshift; % transition shift",
                                "type": "insertion"
                            },
                            {
                                "line": 66,
                                "text": "\t\t\t\t\t\t\t\tforall(i in 2..nday-1) ",
                                "type": "deletion"
                            },
                            {
                                "line": 67,
                                "text": "\t\t\t\t\t\t\t\t((sh[nurse, i] = DAY /\\ sh[nurse, i-1] != DAY) -> sh[nurse, i + 1] = DAY) /\\",
                                "type": "deletion"
                            },
                            {
                                "line": 68,
                                "text": "\t\t\t\t\t\t\t\t(sh[nurse, 1] = DAY -> sh[nurse, 2] = DAY)",
                                "type": "deletion"
                            },
                            {
                                "line": 69,
                                "text": "\t\t\t\t\t\t\t\tregular([sh[nurse, i] | i in DAYS], 10, 5, transition, 1, 2..10)",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": ");",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "array[1..10, SHIFT] of 0..10: transition = ",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "% Action (headings) = MORN, DAY, EVEN, NIGH, OFF",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "% State (columns) = START, MORN, DAY1, DAY2, EVEN, NIGH1, NIGH2, NIGH3, OFF1, OFF2",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "[|2,3,5,6,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|2,3,5,6,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|0,4,0,0,0",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|2,4,5,6,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|0,3,5,6,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|0,0,5,7,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|0,0,5,8,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|0,0,5,0,9",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|2,3,5,6,10",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|2,3,5,6,0",
                                "type": "insertion"
                            },
                            {
                                "line": 69,
                                "text": "|];",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1712268081.189
                    }
                ],
                "snapshot": "% nurse rostering project\n% STAGE A data\nenum NURSE; % set of nurses to roster\nenum SHIFT = { MORN, DAY, EVEN, NIGH, OFF };\nint: nday;     % number of days for roster\nset of int: DAYS = 1..nday; \narray[NURSE,DAYS] of bool: rostered_off; % nurse is guaranteed an off shift\n% STAGE B data\nint: maxweek; % maximum working shifts in any 7 day period\nint: maxnightfort; % maximum night shifts in any 14 day period\nint: minfort; % minimum number of working shifts in any 14 day period\narray[SHIFT,DAYS] of int: minshift; % minimum number of nurses rostered on each shift\n% STAGE C data\narray[NURSE] of int: shift_cost;  \n% STAGE D data\nenum WARD;  % set of wards to roster\nWARD: dummy; % dummy ward\narray[WARD,DAYS] of int: minward; % minimum number of nurses rostered to each ward\nconstraint forall(d in DAYS)(assert(minward[dummy,d] = 0, \"Dummy ward has non zero minimum on day \\(d)\\n\"));\nint: maxward; % maximum number of wards any nurse can work in the roster period\n% STAGE E data\nenum SKILL;\nSKILL: senior;                         % which skill is senior\narray[NURSE] of set of SKILL: skill;   % skills that each nurse has\narray[WARD] of set of SKILL: required; % particular skills for each ward\nopt WARD: emergency; % emergency ward if its being rostered\nenum SLICE = { PREDAWN, AM, PM, LATE };\n% coverage MORNING = {PREDAWN, AM}, \n%          DAY = {AM,PM} \n%          EVENING = {PM, LATE}, \n%          NIGHT {LATE, PREDAWN of the next day} \n\n%%%% DECISIONS\narray[NURSE,DAYS] of var SHIFT: sh; % shift for each nurse on each day\nvar 0..nday*sum(shift_cost): total_cost;\narray[NURSE,DAYS] of var WARD: wd; % ward rostered for each nurse\n\n% --- Stage A\n% A1\ninclude \"globals.mzn\";\nconstraint forall(nurse in NURSE, i in DAYS) (\n\t\t\t\t\t\t\t\t rostered_off[nurse, i] = true -> sh[nurse, i] = OFF\n);\n\t\t\t\t\t\t\t\t\n% A2\n% constraint forall(nurse in NURSE) (\n% \t\t\t\t\t\t\t\tforall(i in 1..nday-3) (\n% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse,i] = sh[nurse, i+1] \t/\\ sh[nurse, i] = NIGH /\\ sh[nurse,i] = sh[nurse, i+2]) -> \tsh[nurse, i+3] != NIGH\n% \t\t\t\t\t\t\t\t)\t\n% );\n\n% constraint forall(nurse in NURSE) (\n% \t\t\t\t\t\t\t\tforall(i in 1..nday-1) (\n% \t\t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = NIGH -> sh[nurse, i+1] in {EVEN, NIGH, OFF})\n% \t\t\t\t\t\t\t\t\t /\\ (sh[nurse, i] = EVEN -> sh[nurse, i+1] != MORN)\n% \t\t\t\t\t\t\t\t)\t\n% );\n\t\t\t\t\t\n% constraint forall(nurse in NURSE) (\n% \t\t\t\t\t\t\t\tforall(i in 1..nday-2) (\n% \t\t\t\t\t\t\t\t\t\t(sh[nurse, i] = OFF /\\ sh[nurse, i+1] = OFF) ->  sh[nurse, i+2] != OFF\n% \t\t\t\t\t\t\t\t)\t\n% );\n\n% constraint forall(nurse in NURSE) (\n% \t\t\t\t\t\t\t\tforall(i in 2..nday-1) \n% \t\t\t\t\t\t\t\t((sh[nurse, i] = DAY /\\ sh[nurse, i-1] != DAY) -> sh[nurse, i + 1] = DAY) /\\\n% \t\t\t\t\t\t\t\t(sh[nurse, 1] = DAY -> sh[nurse, 2] = DAY)\n% );\n\n% Using regular constraint:\narray[NURSE, DAYS] of var SHIFT: tshift; % transition shift\nconstraint forall(nurse in NURSE) (\n\t\t\t\t\t\t\t\tregular([sh[nurse, i] | i in DAYS], 10, 5, transition, 1, 2..10)\n\n);\narray[1..10, SHIFT] of 0..10: transition = \n% Action (headings) = MORN, DAY, EVEN, NIGH, OFF\n% State (columns) = START, MORN, DAY1, DAY2, EVEN, NIGH1, NIGH2, NIGH3, OFF1, OFF2\n[|2,3,5,6,9\n|2,3,5,6,9\n|0,4,0,0,0\n|2,4,5,6,9\n|0,3,5,6,9\n|0,0,5,7,9\n|0,0,5,8,9\n|0,0,5,0,9\n|2,3,5,6,10\n|2,3,5,6,0\n|];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
            }
        },
        "parent": "117edde7-b9c5-4966-b076-ca7bbcb9f0b5",
        "uuid": "83f829bc-a0de-4245-9b09-fbcef16ba0d5"
    },
    "modelAssignments": [
        {
            "id": "Jo5NoFv6uP",
            "model": "models/nroster.mzn",
            "name": "Nroster Model 1"
        }
    ],
    "moocName": "FIT5216 S1 2024",
    "moocPasswordString": "Submission token",
    "name": "Assignment 2 Rostering",
    "sendMeta": true,
    "solutionAssignments": [
        {
            "data": "data/nroster01.dzn",
            "id": "nS7XGZTCOF",
            "model": "models/nroster.mzn",
            "name": "Nroster 01",
            "timeout": "30"
        },
        {
            "data": "data/nroster04.dzn",
            "id": "RTIZIAYhIA",
            "model": "models/nroster.mzn",
            "name": "Nroster 04",
            "timeout": "30"
        },
        {
            "data": "data/nroster05.dzn",
            "id": "NOQLz5DmMf",
            "model": "models/nroster.mzn",
            "name": "Nroster 05",
            "timeout": "30"
        },
        {
            "data": "data/nroster06.dzn",
            "id": "KYGMfITU20",
            "model": "models/nroster.mzn",
            "name": "Nroster 06",
            "timeout": "60"
        },
        {
            "data": "data/nroster07.dzn",
            "id": "8EVvVCiubE",
            "model": "models/nroster.mzn",
            "name": "Nroster 07",
            "timeout": "60"
        },
        {
            "data": "data/nroster08.dzn",
            "id": "aQnqLph9Uv",
            "model": "models/nroster.mzn",
            "name": "Nroster 08",
            "timeout": "60"
        },
        {
            "data": "data/nroster09.dzn",
            "id": "RBMh0qZHJm",
            "model": "models/nroster.mzn",
            "name": "Nroster 09",
            "timeout": "60"
        },
        {
            "data": "data/nroster10.dzn",
            "id": "wUIpWQqdoO",
            "model": "models/nroster.mzn",
            "name": "Nroster 10",
            "timeout": "60"
        }
    ],
    "submissionTerms": "This is an individual assignment. Your submission has to be entirely your own work. We will use similarity detection software to detect any attempt at collusion, and the penalties are quite harsh. If in doubt, contact your teaching team with any questions! You may not use large language models such as ChatGPT for any part of this assignment",
    "submissionURL": "https://autograder.optimisation-2020.cloud.edu.au/api/index.php"
}
